#!/bin/bash

apt-get update

apt-get -y --force-yes install expect
apt-get -y --force-yes install git
apt-get -y --force-yes install memcached
apt-get -y --force-yes install sqlite3
apt-get -y --force-yes install libcairo2
apt-get -y --force-yes install libcairo2-dev
apt-get -y --force-yes install python-cairo
apt-get -y --force-yes install pkg-config
#apt-get -y --force-yes install bzr

#cd /opt
#bzr branch lp:graphite

wget -P /opt http://python-distribute.org/distribute_setup.py
python /opt/distribute_setup.py
easy_install pip

pip install django==1.3
pip install python-memcached
pip install django-tagging
pip install twisted
pip install whisper==0.9.9
pip install txAMQP==0.6.2
pip install pexpect

git clone https://github.com/graphite-project/graphite-web.git /opt/graphite-src
cd /opt/graphite-src
git checkout 0.9.12
python setup.py build
python setup.py install

cat << EOF > /opt/graphite/webapp/graphite/local_settings.py
SECRET_KEY = '$(date +%s | sha256sum | base64 | head -c 32)'
EOF

cat << EOF > /tmp/graphite_syncdb
#!/usr/bin/env expect

set timeout -1
spawn python /opt/graphite/webapp/graphite/manage.py syncdb

expect "Would you like to create one now" {
  send "yes\r"
}

expect "Username *:" {
  send "root\r"
}

expect "E-mail address:" {
  send "root@insecure.fail\r"
}

expect "Password:" {
  send "root\r"
}

expect "Password *:" {
  send "root\r"
}

expect "Superuser created successfully"
EOF
chmod 775 /tmp/graphite_syncdb
/tmp/graphite_syncdb
rm /tmp/graphite_syncdb


## Configure carbon
#cd /opt/graphite/conf/
#cp carbon.conf.example carbon.conf
#
## Create storage schema and copy it over
## Using the sample as provided in the statsd README
## https://github.com/etsy/statsd#graphite-schema
#cat >> ./storage-schemas.conf << EOF
## Schema definitions for Whisper files. Entries are scanned in order,
## and first match wins. This file is scanned for changes every 60 seconds.
##
## [name]
## pattern = regex
## retentions = timePerPoint:timeToStore, timePerPoint:timeToStore, ...
#[stats]
#priority = 110
#pattern = ^stats\..*
#retentions = 10s:6h,1m:7d,10m:1y
#EOF
#
## Make sure log dir exists for webapp
#mkdir -p /opt/graphite/storage/log/webapp
#
## Copy over the local settings file and initialize database
#cd /opt/graphite/webapp/graphite/
#cp local_settings.py.example local_settings.py
#python /opt/graphite/webapp/graphite/manage.py syncdb --noinput
#
